#%RAML 1.0
title: Photo Collection
version: v1
baseUri: http://api.samplehost.com

# A personal online image storage/display service.
# Registered users can add/remove/update their own images,
# and view the list of others.

schemas:
  sessionData: !include /schemas/sessionData.json
  user: !include /schemas/user.json
  userLogin: !include /schemas/userLogin.json
  profileEditor: !include /schemas/profileEditor.json
  imageData: !include /schemas/imageData.json
  imageDataArr: !include /schemas/imageDataArr.json
  sessionImageData: !include /schemas/sessionImageData.json

/users:
  get:
    description: Check if logged in
    responses:
      200:
        body:
          application/json:
            schema: sessionData
            example: !include /examples/sessionDataEX.json
      404:
        description: Cannot find page

  post:
    description: Create session/login
    body:
      application/json:
        schema: userLogin
        example: !include /examples/userLoginEX.json
    responses:
      200:
        description: already logged in
      201:
        description: |
          New login session for current or new user
        body:
          application/json:
            schema: sessionData
            example: !include /examples/sessionDataEX.json
      403:
        description: Invalid login info

  delete:
      description: Delete session/logout
      body:
        application/json:
          schema: sessionData
          example: !include /examples/sessionDataEX.json
      responses:
        204:
          description: successful logout
        404:
          description: already logged out

  /{username}:
      get:
        description: Get <<username>>'s profile
        responses:
          200:
            body:
              application/json:
                schema: user
                example: !include /examples/userEX.json
          404:
            description: user doesn't exist

      post:
        description: Update <<username>>'s profile
        body:
          application/json:
            schema: profileEditor
            example: !include /examples/profileEditorEX.json
        responses:
          201:
            description: profile successfully updated
            body:
              application/json:
                schema: user
                example: !include /examples/userEX.json
          401:
            description: User doesn't have permission

      delete:
        description: Remove <<username>>'s profile
        body:
          application/json:
            schema: sessionData
            example: !include /examples/sessionDataEX.json
        responses:
          204:
            description: profile successfully deleted
          401:
            description: User doesn't have permission
          404:
            description: nothing to delete

/photos:
  get:
    description: View all photos
    queryParameters:
      maxPhotos:
        description: Max amount of photos per page
        type: integer
        default: 10
        example: 40
    responses:
      200:
        body:
          application/json:
            schema: imageDataArr
            example: !include /examples/imageDataArrayEX.json
      404:
        description: photo page not found

  /{photo_id}:
    get:
      description: View a specific photo
      responses:
        200:
          body:
            application/json:
              schema: imageData
              example: !include /examples/imageDataEX.json

    delete:
      description: Remove a specific photo
      body:
        application/json:
          schema: sessionImageData
          example: !include /examples/sessionImageDataEX.json
      responses:
        204:
          description: Image was successfully deleted
        401:
          description: User doesn't have permission
        404:
          description: Nothing found to delete

    put:
      description: Update a specific photo
      body:
        application/json:
          schema: sessionImageData
          example: !include /examples/sessionImageDataEX.json
      responses:
          200:
            description: Image was successfully updated
            body:
              application/json:
                schema: imageData
                example: !include /examples/imageDataEX.json
          400:
            description: Improper data to update
          403:
            description: User doesn't have permission
          404:
            description: Nothing found to update

  /{username}:
    get:
      description: View photos by username
      queryParameters:
        maxPhotos:
          description: Max amount of photos per page
          type: integer
          default: 10
          example: 40
      responses:
        200:
          body:
            application/json:
              schema: imageDataArr
              example: !include /examples/imageDataArrayEX.json
        404:
          description: Nothing exists here

    post:
      description: Upload a new photo
      body:
        application/json:
          schema: sessionImageData
          example: !include /examples/sessionImageDataEX.json
      responses:
        201:
          description: New photo was uploaded
          body:
            application/json:
              schema: imageData
              example: !include /examples/imageDataEX.json
        403:
          description: User doesn't have permission
